name: 🐍 Semgrep ASVS Coverage for Python

on:
  workflow_dispatch:
    inputs:
      target_path:
        description: '📂 Caminho do diretório de código a ser analisado'
        required: true
        default: '.'
        type: string

jobs:
  semgrep_asvs_scan:
    name: 🔍 Validação Semgrep - Python (ASVS)
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: ⚙️ Instalar dependências
        run: |
          python3 -m pip install --upgrade pip
          pip install pipx
          pipx ensurepath
          pipx install semgrep || pip install semgrep  # fallback em caso de erro

      - name: 🧪 Executar Semgrep (ASVS)
        run: |
          mkdir -p semgrep_output
          semgrep scan \
            --config "p/owasp-asvs" \
            --include "py" \
            --output semgrep_output/semgrep-asvs.json \
            --json \
            --error \
            --exclude-dir node_modules \
            "${{ inputs.target_path }}"

      - name: 📄 Gerar relatório Markdown
        run: |
          echo "# 📋 Relatório ASVS com Semgrep" > asvs_semgrep_report.md
          echo "" >> asvs_semgrep_report.md
          if [ -s semgrep_output/semgrep-asvs.json ]; then
            jq -r '
              .results[] |
              "## 🧠 Rule: \(.check_id)\n\n**Arquivo:** \(.path)\n\n**Linha:** \(.start.line)\n\n```python\n\(.extra.lines | join("\n"))\n```" 
            ' semgrep_output/semgrep-asvs.json >> asvs_semgrep_report.md
          else
            echo "✅ Nenhum problema encontrado." >> asvs_semgrep_report.md
          fi

      - name: 📤 Upload do relatório como artefato
        uses: actions/upload-artifact@v4
        with:
          name: asvs_semgrep_report
          path: asvs_semgrep_report.md

      - name: 📊 Mostrar relatório no terminal
        run: cat asvs_semgrep_report.md
